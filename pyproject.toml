[project]
name = "s3vec-py"
version = "0.2.0"
description = "S3-compatible vector store (FastAPI, MinIO/S3 backend, Lance)"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "You" }]
dependencies = [
  "fastapi>=0.110.0",
  "uvicorn[standard]>=0.29.0",
  "boto3>=1.34.0",
  "botocore>=1.34.0",
  "lancedb>=0.10.0",
  "pyarrow>=15.0.0",
  "pandas>=2.0.0",
  "orjson>=3.9.15",
  "pydantic>=2.6.0",
  "python-multipart>=0.0.9",
  "python-dateutil>=2.8.2",
  "requests>=2.32.4",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.0.0",
  "httpx>=0.27.0",
  "ruff>=0.4.0",
  "pytest-cov>=4.0.0",
  "pytest-asyncio>=0.21.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/app"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests/unit",
    "tests/integration"
]
pythonpath = [
    "src"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as asyncio tests"
]

[tool.coverage.run]
source = ["src/app"]
omit = [
    "*/__pycache__/*",
    "*/test_*",
    "*/conftest.py",
    "*/setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]